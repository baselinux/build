#!/bin/bash

set -e

# Define versions
KERNEL_VERSION=$(cat versions/linux)
BUSYBOX_VERSION=$(cat versions/busybox)

# Define directories and URLs
WORK_DIR="BaseLinux"
ISO_DIR="${WORK_DIR}/iso"
KERNEL_DIR="${ISO_DIR}/boot"
KERNEL_URL="https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-${KERNEL_VERSION}.tar.xz"
BUSYBOX_URL="https://busybox.net/downloads/busybox-${BUSYBOX_VERSION}.tar.bz2"

# Create necessary directories
mkdir -p ${WORK_DIR} ${ISO_DIR} ${KERNEL_DIR}

# Update package manager and install dependencies
sudo apt update
sudo apt install -y build-essential gcc make bison flex libssl-dev bc wget cpio grub-pc-bin

# Download and compile the Linux kernel
wget ${KERNEL_URL} -P ${WORK_DIR}
tar -xvf ${WORK_DIR}/linux-${KERNEL_VERSION}.tar.xz -C ${WORK_DIR}
cd ${WORK_DIR}/linux-${KERNEL_VERSION}
make defconfig
make -j$(nproc)
sudo make modules_install INSTALL_MOD_PATH=${ISO_DIR}
sudo make install INSTALL_PATH=${KERNEL_DIR}
cd ..

# Download and compile BusyBox
wget ${BUSYBOX_URL} -P ${WORK_DIR}
tar -xvf ${WORK_DIR}/busybox-${BUSYBOX_VERSION}.tar.bz2 -C ${WORK_DIR}
cd ${WORK_DIR}/busybox-${BUSYBOX_VERSION}
make defconfig
make -j$(nproc)
make install CONFIG_PREFIX=${WORK_DIR}/rootfs
cd ..

# Create root filesystem directory structure
mkdir -p ${WORK_DIR}/rootfs/{bin,dev,etc,home,lib,proc,sbin,sys,tmp,usr,var}
cd ${WORK_DIR}/rootfs

# Add necessary libraries
cp /lib/x86_64-linux-gnu/{libc.so.6,libm.so.6,libresolv.so.2,ld-linux-x86-64.so.2} lib/

# Create init script
cat > init << 'EOF'
#!/bin/sh
mount -t proc none /proc
mount -t sysfs none /sys
exec /bin/sh
EOF
chmod +x init

# Create initial ramdisk
find . | cpio -o --format=newc | gzip > ${WORK_DIR}/initrd.img
cd ${WORK_DIR}

# Create GRUB configuration
mkdir -p ${ISO_DIR}/boot/grub
cat > ${ISO_DIR}/boot/grub/grub.cfg << 'EOF'
set timeout=5
set default=0

menuentry "BaseLinux" {
    linux /boot/vmlinuz
    initrd /boot/initrd.img
}
EOF

# Create bootable ISO
grub-mkrescue -o ${WORK_DIR}/BaseLinux.iso ${ISO_DIR}

echo "BaseLinux ISO created successfully: ${WORK_DIR}/BaseLinux.iso"

# Clean up
rm -rf ${WORK_DIR}/rootfs ${WORK_DIR}/initrd.img ${WORK_DIR}/linux-${KERNEL_VERSION} ${WORK_DIR}/busybox-${BUSYBOX_VERSION}

echo "To test the ISO with QEMU, run: qemu-system-x86_64 -cdrom ${WORK_DIR}/BaseLinux.iso"
